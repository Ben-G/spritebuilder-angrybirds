/*
 * cocos2d for iPhone: http://www.cocos2d-iphone.org
 *
 * Copyright (c) 2010 Ricardo Quesada
 * Copyright (c) 2011 Zynga Inc.
 * Copyright (c) 2013 Lars Birkemose
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 *
 * File autogenerated with Xcode. Adapted for cocos2d needs.
 */

// TODO: Add circular touch detection
// TODO: support expand / contract touch area
// TODO: Grab mouse and touch by implementing onPressed, onReleased, onClicked

#import <Foundation/Foundation.h>

#if TARGET_OS_IPHONE || TARGET_IPHONE_SIMULATOR

// -----------------------------------------------------------------
#pragma mark - iOS
// -----------------------------------------------------------------

#import <UIKit/UIKit.h>

#define RESPONDER UIResponder

@protocol CCResponderProtocol <NSObject>

@optional
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event;
- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event;
- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event;
- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event;

@end

// -----------------------------------------------------------------

@interface CCRunningResponder : NSObject

@property (nonatomic, strong) id target;                            // the target associated with the touch
@property (nonatomic, weak) UITouch *touch;                         // the current touch ( should not be retained )
@property (nonatomic, weak) UIEvent *event;                         // the current event ( should not be retained )

@end

#else

// -----------------------------------------------------------------
#pragma mark - Mac
// -----------------------------------------------------------------

#import <AppKit/AppKit.h>

#define RESPONDER NSResponder

typedef enum
{
    CCMouseButtonLeft,
    CCMouseButtonRight,
    CCMouseButtonOther,
} CCMouseButton;

@protocol CCResponderProtocol <NSObject>

@optional
- (void)mouseDown:(NSEvent *)theEvent;
- (void)mouseDragged:(NSEvent *)theEvent;
- (void)mouseUp:(NSEvent *)theEvent;
- (void)rightMouseDown:(NSEvent *)theEvent;
- (void)rightMouseDragged:(NSEvent *)theEvent;
- (void)rightMouseUp:(NSEvent *)theEvent;
- (void)otherMouseDown:(NSEvent *)theEvent;
- (void)otherMouseDragged:(NSEvent *)theEvent;
- (void)otherMouseUp:(NSEvent *)theEvent;
- (void)scrollWheel:(NSEvent *)theEvent;

- (void)mouseMoved:(NSEvent *)theEvent;
- (void)mouseEntered:(NSEvent *)theEvent;
- (void)mouseExited:(NSEvent *)theEvent;

@end

// -----------------------------------------------------------------

@interface CCRunningResponder : NSObject

@property (nonatomic, strong) id target;                            // the target associated with the mouse event
@property (nonatomic, assign) CCMouseButton button;                 // button of the current event

@end

#endif

// -----------------------------------------------------------------
#pragma mark - Both
// -----------------------------------------------------------------

@class CCNode;

// -----------------------------------------------------------------

enum
{
    CCResponderManagerBufferSize        = 128,
};

// -----------------------------------------------------------------

@interface CCResponderManager : RESPONDER

// -----------------------------------------------------------------

@property (nonatomic) BOOL eventProcessed;                          // event was processed

// -----------------------------------------------------------------

+ (CCResponderManager*)responderManager;
- (id)init;

- (void)addResponder:(CCNode *)responder;
- (void)removeAllResponders;
- (void)markAsDirty;

- (CCNode *)nodeAtPoint:(CGPoint)pos;
- (NSArray *)nodesAtPoint:(CGPoint)pos;

// -----------------------------------------------------------------

@end

















































