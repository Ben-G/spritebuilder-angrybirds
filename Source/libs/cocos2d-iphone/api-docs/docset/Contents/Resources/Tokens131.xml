<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/CCPhysicsCollisionDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/CCPhysicsCollisionDelegate</TokenIdentifier>
			<Abstract type="html">Delegate type called when two physics bodies collide.
The final two parameter names should be replaced with strings used with CCPhysicsBody.collisionType or CCPhysicsShape.collisionType.
If both final parameter names are &quot;default&quot; then the method is called when a more specific method isn&apos;t found.
&quot;wildcard&quot; can be used as the final parameter name to mean &quot;collides with anything&quot;.</Abstract>
			<DeclaredIn>CCPhysicsNode.h</DeclaredIn>
            
			
			<NodeRef refid="131"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCPhysicsCollisionDelegate/ccPhysicsCollisionBegin:typeA:typeB:</TokenIdentifier>
			<Abstract type="html">Begin methods are called on the first fixed time step when two bodies begin colliding.
If you return NO from a begin method, the collision between the two bodies will be ignored.</Abstract>
			<DeclaredIn>CCPhysicsNode.h</DeclaredIn>
			
			<Declaration>- (BOOL)ccPhysicsCollisionBegin:(CCPhysicsCollisionPair *)pair typeA:(CCNode *)nodeA typeB:(CCNode *)nodeB</Declaration>
			
			
			<Anchor>//api/name/ccPhysicsCollisionBegin:typeA:typeB:</Anchor>
            <NodeRef refid="131"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCPhysicsCollisionDelegate/ccPhysicsCollisionPreSolve:typeA:typeB:</TokenIdentifier>
			<Abstract type="html">Pre-solve methods are called every fixed time step when two bodies are in contact before the physics solver runs.
You can call use properties such as friction, restitution, surfaceVelocity on CCPhysicsCollisionPair from a post-solve method.
If you return NO from a pre-solve method, the collision will be ignored for the current time step.</Abstract>
			<DeclaredIn>CCPhysicsNode.h</DeclaredIn>
			
			<Declaration>- (BOOL)ccPhysicsCollisionPreSolve:(CCPhysicsCollisionPair *)pair typeA:(CCNode *)nodeA typeB:(CCNode *)nodeB</Declaration>
			
			
			<Anchor>//api/name/ccPhysicsCollisionPreSolve:typeA:typeB:</Anchor>
            <NodeRef refid="131"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCPhysicsCollisionDelegate/ccPhysicsCollisionPostSolve:typeA:typeB:</TokenIdentifier>
			<Abstract type="html">Post-solve methods are called every fixed time step when two bodies are in contact after the physics solver runs.
You can call use properties such as totalKineticEnergy and totalImpulse on CCPhysicsCollisionPair from a post-solve method.</Abstract>
			<DeclaredIn>CCPhysicsNode.h</DeclaredIn>
			
			<Declaration>- (void)ccPhysicsCollisionPostSolve:(CCPhysicsCollisionPair *)pair typeA:(CCNode *)nodeA typeB:(CCNode *)nodeB</Declaration>
			
			
			<Anchor>//api/name/ccPhysicsCollisionPostSolve:typeA:typeB:</Anchor>
            <NodeRef refid="131"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CCPhysicsCollisionDelegate/ccPhysicsCollisionSeparate:typeA:typeB:</TokenIdentifier>
			<Abstract type="html">Separate methods are called the first fixed time step after two bodies stop colliding.</Abstract>
			<DeclaredIn>CCPhysicsNode.h</DeclaredIn>
			
			<Declaration>- (void)ccPhysicsCollisionSeparate:(CCPhysicsCollisionPair *)pair typeA:(CCNode *)nodeA typeB:(CCNode *)nodeB</Declaration>
			
			
			<Anchor>//api/name/ccPhysicsCollisionSeparate:typeA:typeB:</Anchor>
            <NodeRef refid="131"/>
		</Token>
		
        
	</File>
</Tokens>